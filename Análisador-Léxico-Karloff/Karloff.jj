PARSER_BEGIN(Karloff)
import java.io.*;

public class Karloff {
  public static void main(String args[]) throws ParseException, IOException {
      Karloff analisador = new Karloff(new FileInputStream(args[0]));
      analisador.Karloff();
  }
}

PARSER_END(Karloff)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <VOID: "void">
| <NEWVAR: "newVar">
| <INT: "int">
| <BOOL: "bool">
| <PVIRGULA: ";">
| <ATRIB: "=">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <APAR: "(">
| <FPAR: ")">
| <IF: "if">
| <THEN: "then">
| <ELSE: "else">
| <WHILE: "while">
| <REPEAT: "repeat">
| <UNTIL: "until">
| <FUNC: "func">
| <SOUTPUT: "System.output">
| <TRUE: "true">
| <FALSE: "false">
| <SOMA: "+">
| <SUB: "-">
| <MULT: "*">
| <DIV: "/">
| <AND: "&">
| <OR: "|">
| <MAIORQUE: ">">
| <MENORQUE: "<">
| <IGUAL: "==">
| <VIRGULA: ",">
}

TOKEN :
{
  <NUM : (["0"-"9"])+ ("." (["0"-"9"])+)? ("E" ("+" | "-")? (["0"-"9"])+)?>
 |<ID: (["a"-"z","A"-"Z"])+ (["a"-"z","A"-"Z", "0"-"9"])* ("_" (["a"-"z","A"-"Z", "0"-"9"])+)*>
}

void Karloff () :
{Token t;}
{
(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <VOID> { System.out.println("Palavra reservada: void");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| t=<NUM> { System.out.println("Número: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
| <NEWVAR> { System.out.println("Palavra reservada: newVar");}
| <INT> { System.out.println("Palavra reservada: int");}
| <BOOL> { System.out.println("Palavra reservada: bool");}
| <PVIRGULA> { System.out.println("Ponto e virgula: ;");}
| <ATRIB> { System.out.println("Atribuição: =");}
| <APAR> { System.out.println("Abre parênteses: (");}
| <FPAR> { System.out.println("Fecha parênteses: )");}
| <IF> { System.out.println("Palavra reservada: if");}
| <THEN> { System.out.println("Palavra reservada: then");}
| <ELSE> { System.out.println("Palavra reservada: else");}
| <WHILE> { System.out.println("Palavra reservada: while");}
| <REPEAT> { System.out.println("Palavra reservada: repeat");}
| <UNTIL> { System.out.println("Palavra reservada: until");}
| <FUNC> { System.out.println("Palavra reservada: func");}
| <SOUTPUT> { System.out.println("Palavra reservada: System.output");}
| <TRUE> { System.out.println("Palavra reservada: true");}
| <FALSE> { System.out.println("Palavra reservada: false");}
| <SOMA> { System.out.println("Operador: +");}
| <SUB> { System.out.println("Operador: -");}
| <MULT> { System.out.println("Operador: *");}
| <DIV> { System.out.println("Operador: /");}
| <AND> { System.out.println("Operador: &");}
| <OR> { System.out.println("Operador: |");}
| <MAIORQUE> { System.out.println("Operador: >");}
| <MENORQUE> { System.out.println("Operador: <");}
| <IGUAL> { System.out.println("Operador: ==");}
| <VIRGULA> { System.out.println("Virgula: ,");}
)*
<EOF> 
}





